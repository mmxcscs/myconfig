
" For vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()


" This is the Vundle package, which can be found on GitHub.
" For GitHub repos, you specify plugins using the
" 'user/repository' format
Plugin 'gmarik/vundle'

" We could also add repositories with a ".git" extension
Plugin 'scrooloose/nerdtree.git'

" To get plugins from Vim Scripts, you can reference the plugin
" by name as it appears on the site
Plugin 'Buffergator'

" completion using clang
Plugin 'valloric/YouCompleteMe'

" silver search
Plugin 'ervandew/ag'

" git command line
Plugin 'tpope/vim-fugitive'

" syntax checker
Plugin 'scrooloose/syntastic.git'

" info line
Plugin 'bling/vim-airline'

Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/nerdcommenter'
Plugin 'godlygeek/tabular'
Plugin 'airblade/vim-gitgutter'
Plugin 'Shougo/vimshell.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'sjl/gundo.vim'
Plugin 'vim-scripts/a.vim'



" Now we can turn our filetype functionality back on
filetype plugin indent on

set t_Co=256

syntax enable           " enable syntax processing
set number              " show line numbers
set cursorline          " highlight current line
set showmatch           " higlight matching parenthesis
set history=1000        " Store a ton of history (default is 20)
set showmode            " Display the current mode
set list
set listchars=tab:›\ ,trail:•,extends:#,nbsp:. " Highlight problematic whitespace

set tabstop=4           " 4 space tab
set expandtab           " use spaces for tabs
set softtabstop=4       " 4 space tab
set shiftwidth=4
set modelines=1
set linespace=0         " No extra spaces between rows
set autoindent

set ignorecase          " ignore case when searching
set smartcase           " Case sensitive when uc present
set incsearch           " search as characters are entered
set hlsearch            " highlight all matches

set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

let NERDTreeIgnore = ['\.pyc$', 'build', 'venv', 'egg', 'egg-info/', 'dist', 'docs']

"let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_detect_modified=1
let g:airline_detect_paste=1
let g:airline_theme             = 'powerlineish'
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1
set laststatus=2
"if has('statusline')

   "" Broken down into easily includeable segments
   "set statusline=%<%f\                     " Filename
   "set statusline+=%w%h%m%r                 " Options
   "set statusline+=%{fugitive#statusline()} " Git Hotness
""   set statusline+=\ [%{&ff}/%Y]            " Filetype
   "set statusline+=\ [%{getcwd()}]          " Current dir
   "set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
"endif

" PCIMODEL
if has("autocmd")
    augroup filetypedetect
      au BufNewFile,BufRead *.pci setf pcisyntax
    augroup END
endif

